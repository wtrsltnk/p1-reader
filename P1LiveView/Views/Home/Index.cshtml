@using P1Reader.Domain.P1;

@model IEnumerable<Measurement>;

@{
    ViewData["Title"] = "Home Page";
}

<canvas id="myChart" width="400" height="400"></canvas>

@section Scripts {
<script>
const DATA_COUNT = 7;
const NUMBER_CFG = {count: DATA_COUNT, min: -100, max: 100};

const data = {
  labels: [],
  datasets: [
    {
      label: 'Energieleverancier',
      data: [],
      borderColor: 'rgb(54, 162, 235)',
      backgroundColor: 'rgba(54, 162, 235, 0.5)',
    },
    {
      label: 'Zonnenpanelen',
      data: [],
      borderColor: 'rgb(54, 235, 162)',
      backgroundColor: 'rgba(54, 235, 162, 0.5)',
    }
  ]
};

const config = {
  type: 'line',
  data: data,
  options: {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: {
        position: 'top',
      },
      title: {
        display: true,
        text: 'Live slimmemeter waarden'
      }
    }
  },
};

const ctx = document.getElementById('myChart').getContext('2d');
window.myChart = new Chart(ctx, config);

$(document).ready(function() {
    let measurements = @Html.Raw(Json.Serialize(Model.ToArray()));
    window.maxMeasurementCount = measurements.length;
    for (let measurement of measurements) {
        AddToChart(measurement, false);
    }
    window.myChart.update();
});

</script>
}
